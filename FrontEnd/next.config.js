// =================================================================
// ██████╗██╗  ██╗ █████╗ ████████╗███████╗██████╗  █████╗ 
// ██╔════╝██║  ██║██╔══██╗╚══██╔══╝██╔════╝██╔══██╗██╔══██╗
// ██║     ███████║███████║   ██║   █████╗  ██████╔╝███████║
// ██║     ██╔══██║██╔══██║   ██║   ██╔══╝  ██╔══██╗██╔══██║
// ╚██████╗██║  ██║██║  ██║   ██║   ███████╗██║  ██║██║  ██║
//  ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝
// GENERATED BY CLAUDE: ChatEra v1.0 – 2025-05-13
// =================================================================

/**
 * ███╗   ██╗███████╗██╗  ██╗████████╗     ██╗███████╗
 * ████╗  ██║██╔════╝╚██╗██╔╝╚══██╔══╝     ██║██╔════╝
 * ██╔██╗ ██║█████╗   ╚███╔╝    ██║        ██║███████╗
 * ██║╚██╗██║██╔══╝   ██╔██╗    ██║   ██   ██║╚════██║
 * ██║ ╚████║███████╗██╔╝ ██╗   ██║   ╚█████╔╝███████║
 * ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝   ╚═╝    ╚════╝ ╚══════╝
 * 
 * [CODEX] Next.js Configuration
 * 
 * This file configures the Next.js build process with custom settings
 * for environment variables, build optimization, and cross-platform 
 * compatibility between Windows and Linux environments.
 */

/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  
  // Enable static exports for Tauri/Electron desktop app
  output: process.env.EXPORT_STATIC === 'true' ? 'export' : undefined,
  
  // Disable server components for desktop compatibility
  experimental: {
    appDir: true,
  },
  
  // Optimize image handling
  images: {
    domains: ['localhost', 'chatera-media.local'],
    // When building for desktop, use static exports
    unoptimized: process.env.EXPORT_STATIC === 'true',
  },
  
  // Environment variables available to the client
  env: {
    NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001/api',
    NEXT_PUBLIC_SOCKET_URL: process.env.NEXT_PUBLIC_SOCKET_URL || 'ws://localhost:3001',
    NEXT_PUBLIC_E2EE_ENABLED: process.env.NEXT_PUBLIC_E2EE_ENABLED || 'true',
  },
  
  // Webpack configuration for cross-platform compatibility
  webpack: (config, { isServer }) => {
    // Add support for native modules in Tauri
    if (!isServer) {
      config.resolve.fallback = {
        ...config.resolve.fallback,
        fs: false,
        path: false,
        os: false,
      };
    }

    return config;
  },
  
  // Handle trailing slashes consistently
  trailingSlash: false,
  
  // Disable telemetry
  telemetry: false,
};

module.exports = nextConfig;
