// =================================================================
// ██████╗██╗  ██╗ █████╗ ████████╗███████╗██████╗  █████╗ 
// ██╔════╝██║  ██║██╔══██╗╚══██╔══╝██╔════╝██╔══██╗██╔══██╗
// ██║     ███████║███████║   ██║   █████╗  ██████╔╝███████║
// ██║     ██╔══██║██╔══██║   ██║   ██╔══╝  ██╔══██╗██╔══██║
// ╚██████╗██║  ██║██║  ██║   ██║   ███████╗██║  ██║██║  ██║
//  ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝
// GENERATED BY CLAUDE: ChatEra v1.0 – 2025-05-13
// =================================================================

/**
 * █▀▀ █▀█ █▀█ █▀▀   █▀▀ █▀█ █▀▄▀█ █▀█ █▀█ █▄░█ █▀▀ █▄░█ ▀█▀ █▀
 * █▄▄ █▄█ █▀▄ ██▄   █▄▄ █▄█ █░▀░█ █▀▀ █▄█ █░▀█ ██▄ █░▀█ ░█░ ▄█
 *
 * [CODEX] Application Core Component
 * 
 * This is the root component that wraps all pages in the application.
 * It provides global context providers, theme settings, and global 
 * layout elements that should be present on all pages.
 * 
 * Cross-platform compatibility is ensured through responsive design
 * and environment-aware behavior.
 */

import React, { useEffect } from 'react';
import { AppProps } from 'next/app';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { ThemeProvider } from 'next-themes';
import { Toaster } from 'react-hot-toast';
import { SocketProvider } from '@/lib/socket';
import { AuthProvider } from '@/lib/auth';
import { TauriProvider } from '@/lib/tauri';

// Import global styles
import '@/styles/globals.css';

// Create React Query client
const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      refetchOnWindowFocus: false,
      retry: 1,
      staleTime: 30 * 1000, // 30 seconds
    },
  },
});

/**
 * █▀▄▀█ ▄▀█ █ █▄░█   ▄▀█ █▀█ █▀█   █▀▀ █▀█ █▀▄▀█ █▀█ █▀█ █▄░█ █▀▀ █▄░█ ▀█▀
 * █░▀░█ █▀█ █ █░▀█   █▀█ █▀▀ █▀▀   █▄▄ █▄█ █░▀░█ █▀▀ █▄█ █░▀█ ██▄ █░▀█ ░█░
 * 
 * The main Application component wraps all pages with necessary providers
 * and global UI elements.
 */
export default function App({ Component, pageProps }: AppProps) {
  // Detect if we're running in a desktop environment (Tauri/Electron)
  const isDesktop = typeof window !== 'undefined' && 
    (window as any).__TAURI__ !== undefined;

  // Platform-specific initialization
  useEffect(() => {
    // Apply platform-specific classes for styling
    if (isDesktop) {
      document.documentElement.classList.add('desktop');
    } else {
      document.documentElement.classList.add('web');
    }

    // Prevent zooming on mobile devices
    const metaViewport = document.querySelector('meta[name=viewport]');
    if (metaViewport) {
      metaViewport.setAttribute('content', 
        'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no');
    }
  }, [isDesktop]);

  return (
    <>
      {/* Global Providers */}
      <QueryClientProvider client={queryClient}>
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
          <TauriProvider>
            <AuthProvider>
              <SocketProvider>
                {/* Main Application */}
                <Component {...pageProps} />

                {/* Global Toast Notifications */}
                <Toaster
                  position="top-right"
                  toastOptions={{
                    duration: 5000,
                    style: {
                      background: 'var(--background)',
                      color: 'var(--foreground)',
                      border: '1px solid var(--border)',
                    },
                  }}
                />
              </SocketProvider>
            </AuthProvider>
          </TauriProvider>
        </ThemeProvider>
      </QueryClientProvider>
    </>
  );
}
