// =================================================================
// ██████╗██╗  ██╗ █████╗ ████████╗███████╗██████╗  █████╗ 
// ██╔════╝██║  ██║██╔══██╗╚══██╔══╝██╔════╝██╔══██╗██╔══██╗
// ██║     ███████║███████║   ██║   █████╗  ██████╔╝███████║
// ██║     ██╔══██║██╔══██║   ██║   ██╔══╝  ██╔══██╗██╔══██║
// ╚██████╗██║  ██║██║  ██║   ██║   ███████╗██║  ██║██║  ██║
//  ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝
// GENERATED BY CLAUDE: ChatEra v1.0 – 2025-05-13
// =================================================================

/**
 * █▀█ ▄▀█ █▀ █▀ █░█░█ █▀█ █▀█ █▀▄   █▀█ █▀▀ █▀ █▀▀ ▀█▀   █▀█ ▄▀█ █▀▀ █▀▀
 * █▀▀ █▀█ ▄█ ▄█ ▀▄▀▄▀ █▄█ █▀▄ █▄▀   █▀▄ ██▄ ▄█ ██▄ ░█░   █▀▀ █▀█ █▄█ ██▄
 * 
 * [CODEX] Password Reset Page
 * 
 * Secure password recovery flow with multi-step process
 * and nostalgic MSN-inspired visual design elements.
 * 
 * Features:
 * - Request password reset via email
 * - Token verification
 * - Secure password reset confirmation
 * - Cross-platform compatibility for web and desktop
 */

import React, { useEffect } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { motion } from 'framer-motion';
import { useAuth } from '@/lib/auth';
import AuthCard from '@/components/auth/AuthCard';
import PasswordResetForm from '@/components/auth/PasswordResetForm';

/**
 * [H4X] PASSWORD RESET PAGE
 * 
 * Multi-step secure password recovery flow
 */
const PasswordResetPage: React.FC = () => {
  const router = useRouter();
  const { status } = useAuth();
  const { token, email } = router.query;
  
  // Handle redirect if already authenticated
  useEffect(() => {
    if (status === 'authenticated') {
      router.replace('/messages');
    }
  }, [status, router]);
  
  // Determine if we're in request mode or reset confirmation mode
  const isResetConfirmation = !!token;
  
  // Page title based on current mode
  const pageTitle = isResetConfirmation 
    ? 'Create New Password' 
    : 'Reset Your Password';
  
  // Page subtitle based on current mode
  const pageSubtitle = isResetConfirmation
    ? 'Enter your new password below'
    : 'We'll send you a link to reset your password';
  
  // Background animation variants
  const backgroundVariants = {
    initial: {
      backgroundPosition: '0% 0%',
    },
    animate: {
      backgroundPosition: '100% 100%',
      transition: {
        duration: 20,
        ease: 'linear',
        repeat: Infinity,
        repeatType: 'reverse' as const,
      },
    },
  };
  
  // Lock animation variants
  const lockVariants = {
    initial: {
      rotate: 0,
      scale: 1,
    },
    animate: {
      rotate: [0, -5, 5, -3, 3, 0],
      scale: [1, 1.05, 0.95, 1.02, 0.98, 1],
      transition: {
        duration: 2,
        ease: 'easeInOut',
        repeat: Infinity,
        repeatType: 'reverse',
        repeatDelay: 5,
      },
    },
  };
  
  return (
    <>
      <Head>
        <title>{pageTitle} | ChatEra</title>
        <meta name="description" content="Reset your ChatEra account password" />
      </Head>
      
      <motion.div 
        className="min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-msn-gray-100 to-msn-gray-200 dark:from-msn-gray-900 dark:to-msn-gray-800"
        initial="initial"
        animate="animate"
        variants={backgroundVariants}
      >
        {/* Dancing gradient background elements */}
        <div className="absolute inset-0 overflow-hidden opacity-30 dark:opacity-20 pointer-events-none">
          <div className="absolute -top-[30%] -left-[10%] w-[70%] h-[70%] rounded-full bg-msn-blue/30 blur-[120px]" />
          <div className="absolute -bottom-[30%] -right-[10%] w-[70%] h-[70%] rounded-full bg-msn-purple/30 blur-[120px]" />
        </div>
        
        {/* Nostalgic lock icon animation */}
        <motion.div 
          className="absolute top-[10%] opacity-10 pointer-events-none"
          variants={lockVariants}
          initial="initial"
          animate="animate"
        >
          <svg width="120" height="120" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path 
              d="M16 11V7C16 4.79086 14.2091 3 12 3C9.79086 3 8 4.79086 8 7V11M12 15V17M7 21H17C18.1046 21 19 20.1046 19 19V13C19 11.8954 18.1046 11 17 11H7C5.89543 11 5 11.8954 5 13V19C5 20.1046 5.89543 21 7 21Z" 
              stroke="currentColor" 
              strokeWidth="2" 
              strokeLinecap="round" 
              strokeLinejoin="round"
            />
          </svg>
        </motion.div>
        
        {/* Main content */}
        <div className="z-10 w-full max-w-md">
          <AuthCard 
            title={pageTitle}
            subtitle={pageSubtitle}
            footer={
              <div>
                Your account security is our priority
              </div>
            }
          >
            <PasswordResetForm 
              token={token as string | undefined}
              email={email as string | undefined}
            />
          </AuthCard>
        </div>
      </motion.div>
    </>
  );
};

export default PasswordResetPage;
