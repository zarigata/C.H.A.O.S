// =================================================================
// ██████╗██╗  ██╗ █████╗ ████████╗███████╗██████╗  █████╗ 
// ██╔════╝██║  ██║██╔══██╗╚══██╔══╝██╔════╝██╔══██╗██╔══██╗
// ██║     ███████║███████║   ██║   █████╗  ██████╔╝███████║
// ██║     ██╔══██║██╔══██║   ██║   ██╔══╝  ██╔══██╗██╔══██║
// ╚██████╗██║  ██║██║  ██║   ██║   ███████╗██║  ██║██║  ██║
//  ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝
// GENERATED BY CLAUDE: ChatEra v1.0 – 2025-05-13
// =================================================================

/**
 * █░░ █▀█ █▀▀ █ █▄░█   █▀█ ▄▀█ █▀▀ █▀▀
 * █▄▄ █▄█ █▄█ █ █░▀█   █▀▀ █▀█ █▄█ ██▄
 * 
 * [CODEX] Login Page
 * 
 * Main authentication entry point for returning users
 * with secure login functionality and MSN-inspired design.
 * 
 * Features:
 * - Cross-platform login for web and desktop
 * - Persistent session management
 * - Protected route handling
 * - Captivating nostalgic UI with modern security
 */

import React, { useEffect } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { motion } from 'framer-motion';
import { toast } from 'react-hot-toast';
import { useAuth } from '@/lib/auth';
import AuthCard from '@/components/auth/AuthCard';
import LoginForm from '@/components/auth/LoginForm';

/**
 * [H4X] LOGIN PAGE
 * 
 * Entry point for returning users to authenticate
 */
const LoginPage: React.FC = () => {
  const router = useRouter();
  const { status } = useAuth();
  
  // Handle redirect if already authenticated
  useEffect(() => {
    if (status === 'authenticated') {
      router.replace('/messages');
    }
  }, [status, router]);
  
  // Show success toast after password reset
  useEffect(() => {
    if (router.query.resetSuccess === 'true') {
      toast.success('Password reset successful! You can now log in with your new password.', {
        duration: 5000,
        position: 'bottom-center',
        style: {
          borderRadius: '10px',
          background: '#333',
          color: '#fff',
        },
      });
    }
  }, [router.query]);
  
  // Background animation variants
  const backgroundVariants = {
    initial: {
      backgroundPosition: '0% 0%',
    },
    animate: {
      backgroundPosition: '100% 100%',
      transition: {
        duration: 20,
        ease: 'linear',
        repeat: Infinity,
        repeatType: 'reverse' as const,
      },
    },
  };
  
  return (
    <>
      <Head>
        <title>Login | ChatEra</title>
        <meta name="description" content="Log in to your ChatEra account to start messaging" />
      </Head>
      
      <motion.div 
        className="min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-msn-gray-100 to-msn-gray-200 dark:from-msn-gray-900 dark:to-msn-gray-800"
        initial="initial"
        animate="animate"
        variants={backgroundVariants}
      >
        {/* Dancing gradient background elements */}
        <div className="absolute inset-0 overflow-hidden opacity-30 dark:opacity-20 pointer-events-none">
          <div className="absolute -top-[30%] -left-[10%] w-[70%] h-[70%] rounded-full bg-msn-blue/30 blur-[120px]" />
          <div className="absolute -bottom-[30%] -right-[10%] w-[70%] h-[70%] rounded-full bg-msn-purple/30 blur-[120px]" />
          <div className="absolute top-[40%] right-[20%] w-[40%] h-[40%] rounded-full bg-msn-green/20 blur-[100px]" />
        </div>
        
        {/* Main content */}
        <div className="z-10 w-full max-w-md">
          <AuthCard 
            title="Welcome back"
            subtitle="Sign in to continue to ChatEra"
            footer={
              <div>
                ChatEra v1.0 | Bridging the past and future of messaging
              </div>
            }
          >
            <LoginForm />
          </AuthCard>
        </div>
      </motion.div>
    </>
  );
};

export default LoginPage;
