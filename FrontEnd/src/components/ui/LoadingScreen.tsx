// =================================================================
// ██████╗██╗  ██╗ █████╗ ████████╗███████╗██████╗  █████╗ 
// ██╔════╝██║  ██║██╔══██╗╚══██╔══╝██╔════╝██╔══██╗██╔══██╗
// ██║     ███████║███████║   ██║   █████╗  ██████╔╝███████║
// ██║     ██╔══██║██╔══██║   ██║   ██╔══╝  ██╔══██╗██╔══██║
// ╚██████╗██║  ██║██║  ██║   ██║   ███████╗██║  ██║██║  ██║
//  ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝
// GENERATED BY CLAUDE: ChatEra v1.0 – 2025-05-13
// =================================================================

/**
 * █░░ █▀█ ▄▀█ █▀▄ █ █▄░█ █▀▀   █▀ █▀▀ █▀█ █▀▀ █▀▀ █▄░█
 * █▄▄ █▄█ █▀█ █▄▀ █ █░▀█ █▄█   ▄█ █▄▄ █▀▄ ██▄ ██▄ █░▀█
 * 
 * [CODEX] Loading Screen Component
 * 
 * This component provides visual feedback during application
 * state transitions, API calls, and authentication checks.
 * 
 * Features:
 * - Customizable loading message
 * - MSN-inspired animated spinner
 * - Progress indication for tracked operations
 * - Responsive design for all screen sizes
 * - Cross-platform compatibility
 */

import React from 'react';
import { motion } from 'framer-motion';
import { Loader2 } from 'lucide-react';

interface LoadingScreenProps {
  message?: string;
  progress?: number;
  fullScreen?: boolean;
}

/**
 * [H4X] ANIMATION VARIANTS
 * 
 * Defines animation patterns for loading screen elements
 */
const bubbleVariants = {
  initial: { scale: 0, opacity: 0 },
  animate: (i: number) => ({
    scale: [0, 1, 1, 1, 0],
    opacity: [0, 0.8, 1, 0.8, 0],
    transition: {
      duration: 2,
      repeat: Infinity,
      delay: i * 0.2,
      ease: 'easeInOut',
    }
  })
};

/**
 * [H4X] LOADING SCREEN COMPONENT
 * 
 * Visual indicator for async operations and transitions
 */
const LoadingScreen: React.FC<LoadingScreenProps> = ({
  message = 'Loading...',
  progress,
  fullScreen = true
}) => {
  // MSN-style colors for the loading bubbles
  const bubbleColors = [
    'bg-msn-blue-light',
    'bg-msn-green-light',
    'bg-msn-purple-light',
    'bg-msn-yellow-light'
  ];
  
  return (
    <div 
      className={`
        flex flex-col items-center justify-center bg-gradient-to-br from-msn-gray-100 to-msn-gray-200
        dark:from-msn-gray-900 dark:to-msn-gray-800 text-msn-gray-800 dark:text-msn-gray-200
        ${fullScreen ? 'fixed inset-0 z-50' : 'w-full h-full min-h-[200px]'}
      `}
    >
      {/* Classic MSN-style loading animation */}
      <div className="relative h-16 w-16 mb-6">
        {/* Spinning inner circle */}
        <motion.div
          className="absolute inset-0 rounded-full border-4 border-msn-blue-lighter dark:border-msn-blue-darker border-t-msn-blue-light border-r-msn-blue"
          animate={{ rotate: 360 }}
          transition={{ 
            duration: 1.5, 
            repeat: Infinity, 
            ease: "linear" 
          }}
        />
        
        {/* MSN-style loading bubbles */}
        <div className="absolute inset-0 flex items-center justify-center">
          {[0, 1, 2, 3].map((i) => (
            <motion.div
              key={i}
              custom={i}
              variants={bubbleVariants}
              initial="initial"
              animate="animate"
              className={`absolute rounded-full h-3 w-3 ${bubbleColors[i]}`}
              style={{ 
                left: `${50 + 20 * Math.cos(i * Math.PI / 2)}%`, 
                top: `${50 + 20 * Math.sin(i * Math.PI / 2)}%`
              }}
            />
          ))}
        </div>
      </div>
      
      {/* Loading message */}
      <div className="text-center">
        <p className="text-lg font-medium mb-2">{message}</p>
        
        {/* Show progress bar if progress is provided */}
        {typeof progress === 'number' && (
          <div className="w-64 h-2 bg-msn-gray-300 dark:bg-msn-gray-700 rounded-full overflow-hidden mt-3">
            <motion.div 
              className="h-full bg-msn-blue"
              initial={{ width: 0 }}
              animate={{ width: `${progress}%` }}
              transition={{ duration: 0.3 }}
            />
          </div>
        )}
        
        {/* Nostalgic MSN-style loading text animation */}
        <motion.p 
          className="text-xs text-msn-gray-500 dark:text-msn-gray-400 mt-3"
          animate={{ opacity: [0.5, 1, 0.5] }}
          transition={{ duration: 1.5, repeat: Infinity }}
        >
          ChatEra is thinking...
        </motion.p>
      </div>
    </div>
  );
};

export default LoadingScreen;
